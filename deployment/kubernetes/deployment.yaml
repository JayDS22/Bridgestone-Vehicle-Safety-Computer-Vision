apiVersion: apps/v1
kind: Deployment
metadata:
  name: vehicle-safety-api
  namespace: bridgestone
  labels:
    app: vehicle-safety-api
    version: v2.1.0
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vehicle-safety-api
  template:
    metadata:
      labels:
        app: vehicle-safety-api
        version: v2.1.0
    spec:
      containers:
      - name: vehicle-safety-api
        image: bridgestone/vehicle-safety:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: MODEL_PATH
          value: "/app/data/models"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: model-storage
          mountPath: /app/data/models
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      - name: logs
        emptyDir: {}
      - name: config
        configMap:
          name: vehicle-safety-config
      nodeSelector:
        gpu: "true"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vehicle-safety-config
  namespace: bridgestone
data:
  model_config.yaml: |
    # YOLOv7 Object Detection Configuration
    yolo:
      model_path: "data/models/yolov7_vehicle.pt"
      confidence_threshold: 0.5
      iou_threshold: 0.45
      input_size: [640, 640]
      device: "auto"
    
    # Ensemble Model Configuration
    ensemble_model:
      model_weights:
        random_forest: 0.3
        xgboost: 0.4
        neural_network: 0.3
    
    # Performance Configuration
    performance:
      max_inference_time_ms: 150
      target_throughput_rps: 1000
      max_memory_gb: 4
      max_cpu_percent: 70
    
    # API Configuration
    api:
      host: "0.0.0.0"
      port: 8000
      workers: 4
      timeout: 30

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage-pvc
  namespace: bridgestone
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vehicle-safety-api-hpa
  namespace: bridgestone
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vehicle-safety-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vehicle-safety-api-pdb
  namespace: bridgestone
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: vehicle-safety-api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vehicle-safety-api-netpol
  namespace: bridgestone
spec:
  podSelector:
    matchLabels:
      app: vehicle-safety-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP
    - protocol: TCP
      port: 5432 # PostgreSQL
    - protocol: TCP
      port: 6379 # Redis
